{"version":3,"sources":["components/Card/Card.js","components/Wrapper/Wrapper.js","components/Header/Header.js","App.js","index.js"],"names":["Card","props","className","onClick","setClicked","id","alt","name","src","image","Wrapper","children","Title","correctGuesses","maxScore","clickMessage","shuffle","arr","a","length","b","Math","floor","random","App","state","cards","clickedCard","filter","match","clicked","console","log","i","setState","cardShuffle","this","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"ggCAaeA,MAVf,SAAcC,GACX,OACG,yBAAKC,UAAU,gBAAgBC,QAAS,kBAAMF,EAAMG,WAAWH,EAAMI,MAClE,yBAAKH,UAAU,iBACZ,yBAAKI,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,WCA9BC,MAJf,SAAiBT,GACd,OAAO,yBAAKC,UAAU,WAAWD,EAAMU,W,MCG3BC,MAJf,SAAeX,GACZ,OAAO,wBAAIC,UAAU,SAASD,EAAMU,W,OCGnCE,EAAiB,EACjBC,EAAW,EACXC,EAAe,2FAGnB,SAASC,EAAQC,GACf,IAAK,IAAIC,EAAID,EAAIE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACvC,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACxCD,EAAIC,GAAKD,EAAIG,GAEf,OAAOH,E,IAoGMO,E,2MA9FbC,MAAQ,CACNC,QACAb,iBACAC,WACAC,gB,EAGFX,WAAa,SAAAC,GACX,IAAMqB,EAAQ,EAAKD,MAAMC,MACnBC,EAAcD,EAAME,QAAO,SAAAC,GAAK,OAAIA,EAAMxB,KAAOA,KAGvD,GAAIsB,EAAY,GAAGG,QAAS,CAC1BC,QAAQC,IAAI,mBAAqBnB,GACjCkB,QAAQC,IAAI,iBAAmBlB,GAC/BD,EAAiB,EACjBE,EAAe,+CAEf,IAAK,IAAIkB,EAAI,EAAGA,EAAIP,EAAMP,OAAQc,IAChCP,EAAMO,GAAGH,SAAU,EAGrB,EAAKI,SAAS,CAAEnB,iBAChB,EAAKmB,SAAS,CAAErB,mBAChB,EAAKqB,SAAS,CAAER,eAGX,GAAIb,EAAiB,GAAI,CAC9Bc,EAAY,GAAGG,SAAU,EACzB,EAAKK,cAELpB,EAAe,6CADfF,EAIqBC,GACnBA,EAAWD,EACX,EAAKqB,SAAS,CAAEpB,eAGhBa,EAAY,GAAGG,SAAU,EACzBjB,EAAiB,EAGjBE,EAAe,8CACfD,EAAW,GACX,EAAKoB,SAAS,CAAEpB,cAIlB,IAAK,IAAImB,EAAI,EAAGA,EAAIP,EAAMP,OAAQc,IAChCP,EAAMO,GAAGH,SAAU,EAGrB,EAAKI,SAAS,CAAER,UAChB,EAAKQ,SAAS,CAAErB,mBAChB,EAAKqB,SAAS,CAAEnB,mB,EAIpBoB,YAAc,WACZ,EAAKD,SAAS,CAAER,MAAOV,EAAQU,M,wEAGvB,IAAD,OACP,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,gCAEA,wBAAIxB,UAAU,UACXkC,KAAKX,MAAMV,cAGd,wBAAIb,UAAU,sBAAd,kBACkBkC,KAAKX,MAAMX,UAE7B,yBAAKZ,UAAU,aACb,yBAAKA,UAAU,OACZkC,KAAKX,MAAMC,MAAMW,KAAI,SAAAR,GAAK,OACzB,kBAAC,EAAD,CACEzB,WAAY,EAAKA,WACjBC,GAAIwB,EAAMxB,GACViC,IAAKT,EAAMxB,GACXI,MAAOoB,EAAMpB,kB,GArFX8B,IAAMC,WCfxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.0f56189f.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\n\nfunction Card(props) {\n   return (\n      <div className=\"card col-md-3\" onClick={() => props.setClicked(props.id)}>\n         <div className=\"img-container\">\n            <img alt={props.name} src={props.image} />\n         </div>\n      </div>\n   )\n}\n\nexport default Card;","import React from \"react\";\nimport \"./Wrapper.js\";\n\nfunction Wrapper(props) {\n   return <div className=\"wrapper\">{props.children}</div>\n}\n\nexport default Wrapper;","import React from \"react\";\nimport \"./Header.css\";\n\nfunction Title(props) {\n   return <h1 className=\"title\">{props.children}</h1>\n}\n\nexport default Title;","import React from 'react';\nimport './App.css';\nimport Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport cards from \"./cards.json\";\n\nlet correctGuesses = 0;\nlet maxScore = 0;\nlet clickMessage = \"Click on the character to earn a point. Lose when you click on the same character twice!\"\n\n// Randomising images\nfunction shuffle(arr) {\n  for (let a = arr.length - 1; a > 0; a--) {\n    let b = Math.floor(Math.random() * (a + 1));\n    arr[a] = arr[b];\n  };\n  return arr\n}\n\nclass App extends React.Component {\n\n  // Setting the state\n  state = {\n    cards,\n    correctGuesses,\n    maxScore,\n    clickMessage\n  };\n\n  setClicked = id => {\n    const cards = this.state.cards;\n    const clickedCard = cards.filter(match => match.id === id);\n\n    // Game over if user has already selected the character in this game\n    if (clickedCard[0].clicked) {\n      console.log(\"Correct Guesses:\" + correctGuesses);\n      console.log(\"Maximum Score:\" + maxScore);\n      correctGuesses = 0;\n      clickMessage = \"Hmm.. You've already clicked this character!\"\n\n      for (var i = 0; i < cards.length; i++) {\n        cards[i].clicked = false;\n      };\n\n      this.setState({ clickMessage });\n      this.setState({ correctGuesses });\n      this.setState({ cards });\n\n      // If character has not been selected before but user hasn't finished game\n    } else if (correctGuesses < 11) {\n      clickedCard[0].clicked = true;\n      this.cardShuffle();\n      correctGuesses++;\n      clickMessage = \"Sweet! This one hasn't been clicked yet!\"\n\n      // If user beats personal record\n      if (correctGuesses > maxScore) {\n        maxScore = correctGuesses;\n        this.setState({ maxScore });\n\n      } else {\n        clickedCard[0].clicked = true;\n        correctGuesses = 0;\n\n        // Restart the game \n        clickMessage = \"Congrats! You're through to the next round!\";\n        maxScore = 12;\n        this.setState({ maxScore });\n\n      }\n      // Set all cards back to unclicked\n      for (let i = 0; i < cards.length; i++) {\n        cards[i].clicked = false;\n      }\n\n      this.setState({ cards });\n      this.setState({ correctGuesses });\n      this.setState({ clickMessage });\n    }\n  };\n\n  cardShuffle = () => {\n    this.setState({ cards: shuffle(cards) })\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Header>Star Wars Clicker Game </Header>\n\n        <h3 className=\"scores\">\n          {this.state.clickMessage}\n        </h3>\n\n        <h3 className=\"scores card-header\">\n          Personal best: {this.state.maxScore}\n        </h3>\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.cards.map(match => (\n              <Card\n                setClicked={this.setClicked}\n                id={match.id}\n                key={match.id}\n                image={match.image}\n              />\n            ))}\n          </div>\n\n        </div>\n\n      </Wrapper>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}